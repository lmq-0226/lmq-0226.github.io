<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>GitHub主题更改步骤</title>
    <link href="undefined2019/10/20/GitHub%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%94%B9%E6%AD%A5%E9%AA%A4/"/>
    <url>2019/10/20/GitHub%E4%B8%BB%E9%A2%98%E6%9B%B4%E6%94%B9%E6%AD%A5%E9%AA%A4/</url>
    
    <content type="html"><![CDATA[<p><strong><em>GitHub主题更改</em></strong></p><p> 首先在浏览器<a href="https://hexo.io/themes/进入github官方主题界面，如图：" target="_blank" rel="noopener">https://hexo.io/themes/进入github官方主题界面，如图：</a> </p><p><img src="/img/1.png" srcset="/img/loading.gif" alt=""></p><p> 里面有非常多的主题，选择一个自己喜欢的，直接点击当前主题的名字 ，就比如说我选择了这个，如图：</p><p><img src="/img/4.png" srcset="/img/loading.gif" alt=""></p><p>点击完之后，进入博主的仓库。点击红笔圈中的绿色按钮，复制红色线上的网址。</p><p><img src="/img/5.png" srcset="/img/loading.gif" alt=""></p><p>后面的步骤就简单了</p><p> 先复制仓库下载主题 ：</p><p><img src="/img/2.png" srcset="/img/loading.gif" alt=""></p><p> 下载完之后会在themes 目录下生成一个名为Mic_Theme文件  </p><p><img src="/img/6.png" srcset="/img/loading.gif" alt=""></p><p>  更改一下hexo工程目录下的配置文件_config.yml，主题名修改一下即可 </p><p><img src="/img/7.png" srcset="/img/loading.gif" alt=""></p><p>然后我们可以先清理一下缓存（清不清理都可以）</p><p><img src="/img/8.png" srcset="/img/loading.gif" alt=""></p><p> 然后重新生成datebase： </p><p><img src="/img/9.png" srcset="/img/loading.gif" alt=""></p><p> 打开本地仓库服务： </p><p><img src="/img/11.png" srcset="/img/loading.gif" alt=""></p><p>浏览器打开本地仓库（localhost:4000），你会发现本地仓库已经变为自己    刚刚更改的主题了 。（但是此时还没有传到远程仓库。）</p><p><strong>部署GItHub服务器</strong></p><p>此处我们采用git命令来完成部署的工作。</p><p>（1）、cd d:/hexo/blog  #切换到你的blog文件夹目录（这里是D盘）（.deploy前有一个空格）</p><p>（2）、git clone  <a href="https://github.com/fang235/fang235.github.io" target="_blank" rel="noopener">https://github.com/自己博客名称/自己博客名称.github.io </a>  .deploy/自己博客名称.github.io</p><p><img src="/img/12.png" srcset="/img/loading.gif" alt=""></p><p>需要部署的时候，执行第三个步骤。执行过程中可能需要让你输入Github账户的用户名及密码，按照提示操作即可。</p><p><strong>验证</strong></p><p>打开浏览器，输入地址：https://自己博客名称.github.io/ ，就可以看到我们的博客上线了哈哈哈！！！（主题更改后可能要等待一段时间，不要着急）。</p>]]></content>
    
    
    <categories>
      
      <category>methods</category>
      
    </categories>
    
    
    <tags>
      
      <tag>hexo markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MySQL创建数据库</title>
    <link href="undefined2019/10/20/MySQL%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E5%91%BD%E4%BB%A4/"/>
    <url>2019/10/20/MySQL%E5%A2%9E%E5%88%A0%E6%9F%A5%E6%94%B9%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p><strong>MySQL**</strong>数据库增删改查<strong><strong>SQL</strong></strong>语句** </p><p><strong>查看数据库</strong> </p><p><strong>使用数据库</strong> </p><p><strong>创建数据库</strong> </p><p><strong>删除数据库</strong> </p><p><strong>创建表</strong> </p><p><strong>长度区别</strong> </p><p>int类型带长度：不影响存取值，即使设定的值超出了长度的范畴，也能存，如果没有达到设定的长度， </p><p>则使用空格自动填充到设定的长度 </p><p>char类型：不可变字符，设定的长度就是规定当前字段能存的数据的最大长度，若超出长度，则会报 </p><p>错，若没有达到长度，使用空格填充到设定的长度 </p><p>varchar：可变字符，设定的长度同样是规定当前字段能存的数据的最大长度，若超出长度，则会报 </p><p>错，若没有达到长度，不会使用空格填充，实际多长就是多长 </p><p><strong>删除表</strong> </p><p><strong>表约束</strong> </p><p>1.非空约束 NOT NULL </p><p>2.默认值约束 DEFAULT ‘男’ </p><p>3.唯一约束 UNIQUE4.主键约束 PRIMARY KEY </p><p>show databases; </p><p>use 数据库名; </p><p>CREATE DATABASE 数据库名; </p><p>DROP DATABASE 数据库名; </p><p>create table 表名( 列名1 类型(长度) [约束], 列名2 类型(长度) [约束], ……); </p><p>DROP TABLE 表名;<strong>查看表结构</strong> </p><p>DESC 表名 </p><p><strong>修改表</strong> </p><p><strong>修改列名</strong> </p><p><strong>修改列类型</strong> </p><p><strong>修改列类型</strong> </p><p><strong>==============================**</strong>数据查询<strong><strong>-</strong></strong>单表<strong>**=================================</strong> </p><p><strong>查询表中全部信息</strong> </p><p><strong>查询表中指定列的信息</strong> </p><p>语句的执行顺序：from—&gt;select </p><p><strong>数据去重</strong> </p><p><strong>拼接结果</strong> </p><p><strong>运算符优先级：</strong> </p><p>1.乘法和除法的优先级高于加法和减法 </p><p>2.同级运算的顺序是从左到右 </p><p>3.表达式中使用”括号”可强行改变优先级的运算顺序 </p><p><strong>设置别名**</strong>(<strong><strong>注意：关键字</strong></strong>as<strong><strong>可以省略</strong></strong>)** </p><p>语句的执行顺序：from—&gt;select </p><p>Alter table 表名 change 列名 新列名 类型; </p><p>Alter table 表名 change 列名 列名 新类型; </p><p>Alter table 表名 modify 列名 新类型; </p><p>select * from 表名; </p><p>select 列1,列2 from 表名; </p><p>select distinct 列…. From 表名; </p><p>select concat(列1,列2) from 表名; </p><p>select 列1[+-*/]列2 from 表名; </p><p>select 列 as 别名 from 表名; </p><p>select 列 别名 from 表名;<strong>条件查询</strong> </p><p><strong>条件中比较运算符：**</strong>(** <strong>等于**</strong>:=** <strong>大于**</strong>:&gt;** <strong>大于等于**</strong>:&gt;=** <strong>小于**</strong>:&lt;** <strong>小于等于**</strong>:&lt;=** <strong>不等于**</strong>:!=** <strong>或</strong> <strong>&lt;&gt; )</strong> </p><p>注意:字符串、日期需使用单引号括起来 </p><p>语句的执行顺序：from—&gt;where—&gt;select </p><p><strong>逻辑运算符**</strong>(** <strong>并且**</strong>:and** <strong>或</strong> <strong>&amp;&amp;</strong> <strong>或**</strong>:or** <strong>非**</strong>:not** <strong>或</strong> <strong>! )</strong> </p><p><strong>范围查询</strong> </p><p>//列在这个区间的值where 列 not between 条件1 and 条件2; </p><p>//不在这个区间where !( 列 between 条件1 and 条件2 ); </p><p>//同样表示不在这个区间 </p><p><strong>集合查询**</strong>(** <strong>判断列的值是否在指定的集合中</strong> <strong>)</strong> </p><p>//列中的数据是in后的值里面的where 列 not in(值1,值2); </p><p>//不是in中指定值的数据 </p><p><strong>NULL**</strong>值查询<strong>**(</strong> <strong>注意：列中值为**</strong>null<strong><strong>不能使用</strong></strong>=<strong>**去查询</strong> <strong>)</strong> </p><p>//查询列中值为null的数据 </p><p><strong>模糊查询</strong> </p><p><strong>%**</strong>：表示<strong><strong>0</strong></strong>到多个字符，示例：** </p><p> //表示以0结尾where 列 like ‘0%’; </p><p>//表示以0开头where 列 like ‘%0%’; </p><p> //表示数据中包含0 </p><p><strong>_**</strong>：表示一个字符，可多次使用，示例：** </p><p>select 列… from 表名 where 条件; </p><p>where 列 比较运算符 值; </p><p>where 条件1 逻辑运算符 条件2; </p><p>where not 条件; </p><p>where 列 between 条件1 and 条件2; </p><p>where 列 in(值1,值2); </p><p>where 列 is null; </p><p>where 列 like ‘%0’; </p><p>where 列 like ‘%0_’;//数据结尾第二位是0 </p><p><strong>结果排序**</strong>(** <strong>对查询出的结果按照一列或多列进行升序还是降序排列 升序**</strong>:asc** <strong>降序**</strong>:desc** <strong>注意：不能使用</strong> </p><p><strong>中文的别名排序**</strong>)** </p><p>where 条件 order by 列 [asc/desc] </p><p>语句的执行顺序：from—&gt;where—&gt;select—&gt;order by </p><p><strong>分页查询**</strong>( beginIndex:<strong>**表示从第多少条数据开始</strong> <strong>pageSize:**</strong>表示每页显示的数据条数** <strong>)</strong> </p><p>where [条件] limit beginIndex,pageSize; </p><p>ex：每页显示3条数据 </p><p>第一页: SELECT * FROM 表名 LIMIT 0,3 –0,1,2 </p><p>第二页: SELECT * FROM 表名 LIMIT 3,3 –3,4,5 </p><p>第三页: SELECT * FROM 表名 LIMIT 6,3 –6,7,8 </p><p>第四页: SELECT * FROM 表名 LIMIT 9,3 –9,10,11  </p><p> …… </p><p>第七页: SELECT * FROM 表名 LIMIT 18,3 –18,19,20 </p><p><strong>beginIndex**</strong>公式：<strong><strong>(</strong></strong>当前页数<strong>*<em>-1)\</em>pageSize</strong> </p><p><strong>聚集函数**</strong>(** <strong>作用于一组数据，并对一组数据返回一个值</strong> <strong>)</strong> </p><p><strong>COUNT:**</strong>统计结果记录数，若统计的是列，列中为<strong><strong>Null</strong></strong>，那么<strong><strong>count</strong></strong>将不会计算值** </p><p><strong>MAX:</strong> <strong>统计计算最大值</strong> </p><p><strong>MIN:</strong> <strong>统计计算最小值</strong> </p><p><strong>SUM:</strong> <strong>统计计算求和</strong> </p><p><strong>AVG:</strong> <strong>统计计算平均值</strong> </p><p><strong>分组函数**</strong>(** <strong>注意：如果要对分组后的数据进行筛选，那么必须使用**</strong>having<strong><strong>关键字，条件写在</strong></strong>having<strong>**后</strong> <strong>)</strong> </p><p>select 聚集函数 from 表名 where [条件] group by 列 having 分组后的条件 </p><p>语句的执行顺序：FROM—&gt; WHERE—&gt;group by—-&gt;Having—&gt;SELECT–&gt;ORDER BY </p><p><strong>Where**</strong>和<strong><strong>having</strong></strong>的区别：** </p><p><strong>Where:</strong> <strong>先过滤已有的数据**</strong>(<strong><strong>数据是已经存在的</strong></strong>),<strong><strong>在进行分组</strong></strong>,<strong>**在聚集计算</strong> </p><p><strong>Having:**</strong>先分组<strong><strong>,</strong></strong>在对每组进行计算<strong><strong>,</strong></strong>根据得到结果在过滤<strong><strong>(</strong></strong>分组把数据算出之后，在过滤<strong>**)</strong> </p><p>注意：使用having的时候，它是可以使用别名的 </p><p><strong>===============================**</strong>数据查询<strong><strong>-</strong></strong>多表<strong>**===============================</strong> </p><p><strong>交叉连接**</strong>:<strong>**又名笛卡尔积，使用交叉连接会产生笛卡尔积</strong> </p><p>假设集合A={a, b}，集合B={0, 1, 2}，则两个集合的笛卡尔积为{(a, 0), (a, 1), (a, 2), (b, 0), (b, 1), (b, 2)}。 </p><p>select * from 表1,表2<strong>内连接：过滤为空的数据**</strong>(<strong><strong>查询的实际上是两张表数据的交集部分</strong></strong>)** <strong>目的</strong> <strong>==**</strong>》解决笛卡尔积现象，正确** </p><p><strong>查询了需要的数据</strong> </p><p>select * from 表1,表2 where 表1.字段=表2.字段; </p><p>//隐式内连接,使用where条件消除笛卡尔积 </p><p>select * from 表1 [inner] join 表2 on 表1.字段=表2.字段; </p><p> //显式内连接,如果是多张表，则一直在join..on后依次添加join..on即可,inner关键字可被省略 </p><p><strong>外连接：左外连接、右外连接、全外连接</strong> </p><p><strong>左外连接**</strong>:<strong><strong>以左边表为主，返回左边表中所有数据，若右表中无数据，则显示为</strong></strong>NULL<strong>**，请参考实际查询</strong> </p><p><strong>结果来理解</strong> </p><p>select * from 表1 left [outer] join 表2 on 表1.字段=表2.字段; </p><p>//表1为左表，表2为右表,outer关键字可被省略 </p><p><strong>右外连接：以右边表为主，返回右表中所有数据，若左表中无数据，则显示为**</strong>NULL<strong>**，结合实际查询结</strong> </p><p><strong>果来理解</strong> </p><p>select * from 表1 right [outer] join 表2 on 表1.字段=表2.字段; </p><p>//表1为左表，表2为右表,outer关键字可被省略 </p><p><strong>全外连接：返回涉及的多表中的所有数据，**</strong>MYSQL<strong>**中不支持该查询，仅限了解自连接：单表当作多表</strong> </p><p><strong>查询，直白的讲就是一张表中数据含有多种关系，使用多表查询的语法，来查询一张表，查询过程中一</strong> </p><p><strong>定要使用别名</strong> </p><p>多用在分类数据、省市县分类数据、权限… </p><p>select 表1.字段1,表2.字段2 from 表名 as 表1,表名 as 表2 where 表1.字段1=表2.字段2 </p><p><strong>子查询：将一个查询结果作为另一个查询的对象，直白的讲就是**</strong>SQL<strong>**语句嵌套</strong> </p><p>select * from (select * from 表名) as 别名select * from where 条件 </p><p>//条件中包含查询语句 </p><p>注意：1.查询结果的虚拟表必须取别名 </p><p> 2.字段与关键字一样，冲突时，需要给字段名加``,(Esc键下面、1的左边) </p><p> 3.如果给虚拟结果表中的字段取了别名，则对虚拟结果表查询时，应该用 表别名.虚拟表字段别名 </p><p><strong>===============================**</strong>插入数据<strong>**===============================</strong> </p><p>insert into 表名(字段1,字段2..) values(值1,值2…); </p><p>注意： 1.如果插入的表中的主键是自增类型的，可以不用插入值 </p><p> 2.如果主键是非自增 ，插入的数据则是填补主键字段值空余的值 </p><p> 3.如果主键设置了自动递增，会从主键字段最大值开始插入数据 </p><p><strong>其他插入方式：</strong>insert into 表名(字段1,字段2) values(值1,值2),(值1,值2); </p><p>//插入多条数据【MYSQL】insert into 表名 values(值1,值2); </p><p>//针对全表所有字段进行插入操作insert into 表名(字段) select 字段 from 表2; </p><p>//查询结果插入insert into 表名 select 字段 from 表2; </p><p>//查询结果，全表插入 </p><p><strong>===============================**</strong>修改数据<strong>**===============================</strong> </p><p>update 表 set 字段=值 where 条件; </p><p> //带条件修改指定数据，否则修改全表 </p><p><strong>===============================**</strong>删除数据<strong>**===============================</strong> </p><p>delete from 表 where 条件; </p><p>//删除数据带条件指定数据，否则删除全表数据 </p><p><strong>===============================**</strong>数据备份<strong>**===============================</strong> </p><p><strong>在命令行窗口进行，若操作系统版本高，则使用管理员模式</strong> </p><p>导出： </p><p>mysqldump -u账户 -p密码 数据库名称&gt;脚本文件存储地 </p><p>ex: mysqldump -uroot -proot jdbcdemo&gt; C:/shop_bak.sql </p><p>导入： </p><p>mysql -u账户 -p密码 数据库名称&lt; 脚本文件存储地址 </p><p>ex: mysql -uroot -proot jdbcdemo&lt; C:/shop_bak.sql </p><p>使用可视化导入导出： </p><p>Navicat工具的导入和导出/Navicat工具的备份和还原 </p><p><strong>===============================**</strong>数据索引<strong>**===============================</strong> </p><p><strong>索引的作用相当于图书的目录，可以根据目录中的页码快速找到所需的内容。</strong> </p><p><strong>什么列适合建索引？？</strong> </p><p>1.表的主键、外键必须有索引； </p><p>2.数据量超过30000的表应该有索引； </p><p>3.经常与其他表进行连接的表，在连接字段上应该建立索引； </p><p>4.经常出现在Where子句中的字段，特别是大表的字段，应该建立索引； </p><p>5.索引应该建在选择性高的字段上； </p><p>6.索引应该建在小字段上，对于大的文本字段甚至超长字段，不要建索引； </p><p><strong>sql**</strong>语句创建和删除索引：** </p><p>创建索引: </p><p>CREATE INDEX 索引名称 ON 表名 (列名) </p><p>删除索引: </p><p>方式一：DROP INDEX 索引名 ON 表名 </p><p>方式二: </p><p>ALTER TABLE 表名 DROP INDEX 索引名</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>我的第一个博客</title>
    <link href="undefined2019/10/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/"/>
    <url>2019/10/20/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<p>我的第一个博客 你好呀！</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="undefined2019/10/17/hello-world/"/>
    <url>2019/10/17/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>